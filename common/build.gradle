dependencies {
    compileOnly 'com.google.code.findbugs:jsr305:3.0.2'
    // We depend on fabric loader here to use the fabric @Environment annotations
    // Do NOT use other classes from fabric loader
    modImplementation "net.fabricmc:fabric-loader:${rootProject.fabric_loader_version}"

    // vs-core
    implementation("org.valkyrienskies.core:vs-core:${rootProject.vs_core_version}") {
        exclude module: "netty-buffer"
        exclude module: "fastutil"
    }

    implementation("io.github.microutils:kotlin-logging-jvm:2.1.23")
}

architectury {
    common(rootProject.enabled_platforms.split(","))
}

loom {
    accessWidenerPath = file("src/main/resources/valkyrienskies-common.accesswidener")
}

publishing {
    publications {
        mavenCommon(MavenPublication) {
            groupId = "org.valkyrienskies"
            version = project.version
            artifactId = rootProject.archives_base_name + "-" + project.name
            from components.java
        }
    }

    // See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
    repositories {
        if (project.hasProperty('vs_maven_username') && project.hasProperty('vs_maven_url')) {
            println "Publishing to VS Maven"
            maven {
                url = project.findProperty('vs_maven_url')
                credentials {
                    username = project.findProperty('vs_maven_username')
                    password = project.findProperty('vs_maven_password')
                }
            }
        }
        // Add repositories to publish to here.
        if (System.getenv("GITHUB_ACTOR") != null) {
            println "Publishing to Github Packages"
            maven {
                name = "GitHubPackages"
                url = uri("https://maven.pkg.github.com/ValkyrienSkies/Valkyrien-Skies-2")
                credentials {
                    username = System.getenv("GITHUB_ACTOR")
                    password = System.getenv("GITHUB_TOKEN")
                }
            }
        }
    }
}
